<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一只小喵喵的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-10T08:20:19.671Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wyy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>获取指定行所在的列</title>
    <link href="http://yoursite.com/2018/10/10/%E8%8E%B7%E5%8F%96%E6%8C%87%E5%AE%9A%E8%A1%8C%E6%89%80%E5%9C%A8%E7%9A%84%E5%88%97/"/>
    <id>http://yoursite.com/2018/10/10/获取指定行所在的列/</id>
    <published>2018-10-10T07:27:02.000Z</published>
    <updated>2018-10-10T08:20:19.671Z</updated>
    
    <content type="html"><![CDATA[<hr><p>　　layout: default</p><h2 id="title-如何获取table下指定列的值及所在行"><a href="#title-如何获取table下指定列的值及所在行" class="headerlink" title="　　title: 如何获取table下指定列的值及所在行"></a>　　title: 如何获取table下指定列的值及所在行</h2><p>每次前端的问题都能把我整好久，看来当时网页这门课没学好，今天遇到的问题是不知道如何获取table下某一列的所有数值，校验后并对它所在的行的其他兄弟节点进行操作。</p><p>html：</p><pre><code>&lt;table class=&quot;datatbl&quot;&gt;    &lt;thead&gt;        &lt;tr&gt;            &lt;td&gt;xxx&lt;/td&gt;            &lt;td&gt;xxx&lt;/td&gt;        &lt;/tr&gt;    &lt;/thead&gt;    &lt;tbody&gt;        &lt;s:iterator value=&quot;list&quot;&gt;            &lt;td class=&quot;a&quot;&gt;&lt;s:property value=&quot;a&quot;/&gt;&lt;/td&gt;            &lt;td class=&quot;compareFlag&quot;&gt;&lt;s:property value=&quot;b&quot;/&gt;&lt;/td&gt;        &lt;/s:iterator&gt;    &lt;/tbody&gt;&lt;/table&gt;</code></pre><p>思路：为了操作步骤方便，我直接将要获取的那一列加上class，本来想从table一步步往下找，但是不知道怎么.childern不太会用，索性直接根据class找所有的元素。</p><pre><code>$(&quot;.compareFkStatus&quot;).each(function(){    console.log($(this).html());});</code></pre><p>然后获取此td所在的tr，也就是其父节点</p><pre><code>$(&quot;.compareFkStatus&quot;).each(function(){    console.log($(this).html());    var parent = $(this).parent();    var a = parent.find(&quot;[class=&apos;a&apos;]&quot;).html();    console.log(&quot;a:&quot;+a);});</code></pre><p>这里parent就是所在列，a就是所在列。</p><p>总结一下，也就是子元素与父元素的获取</p><pre><code>$(子元素).parent() #获取父元素$(父元素).children(selector) #获取子元素$(xxx).find(&quot;[class=&apos;a&apos;]&quot;)    #与上面相似，此处的意思为xxx下的class为a的元素</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;　　layout: default&lt;/p&gt;
&lt;h2 id=&quot;title-如何获取table下指定列的值及所在行&quot;&gt;&lt;a href=&quot;#title-如何获取table下指定列的值及所在行&quot; class=&quot;headerlink&quot; title=&quot;　　title: 如何获
      
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>搭建博客步骤</title>
    <link href="http://yoursite.com/2018/10/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%AD%A5%E9%AA%A4/"/>
    <id>http://yoursite.com/2018/10/10/搭建博客步骤/</id>
    <published>2018-10-10T01:42:31.000Z</published>
    <updated>2018-10-10T08:34:21.323Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>写在前面，这其实不是我第一次搭博客，之前尝试过一次但是兴致冲冲地找了很多教程做到后来发现hexo装的就有些问题，并不是网上的教程不详细，但是东看西看容易出错，这里重头再来一遍，把之前的坑都补上</p></blockquote><h3 id="安装Nexo"><a href="#安装Nexo" class="headerlink" title="安装Nexo"></a>安装Nexo</h3><p>前提：安装好了node.js和git</p><p>1)新建一个空的文件夹，用于存放你的项目，在其中打开Git Bash</p><p>2)依次执行以下命令：</p><pre><code>npm install hexo-cli -ghexo init blogcd blognpm installhexo server</code></pre><p>其中第一步可能会等的久一点，耐心等待。</p><p>3)浏览器打开4000端口，可以在本地看到原始的hexo博客，ctrl+c关闭，每次想预览可以再输入 <code>hexo server (hexo s)</code></p><p>如果4000端口占用，可用<code>hexo server -p 其他端口号</code>，也可以找方法把4000端口的服务关掉</p><p>这一步有问题一定要解决，hexo运行正常才是搭一个githubio的前提</p><h3 id="部署到GitHub-Pages"><a href="#部署到GitHub-Pages" class="headerlink" title="部署到GitHub Pages"></a>部署到GitHub Pages</h3><p>1) 在GitHub新建一个仓库，Repository name必须得是 <strong>账户名.github.io</strong> </p><p>这时你已经可以访问 <a href="https://xxx.github.io/了" target="_blank" rel="noopener">https://xxx.github.io/了</a></p><p>2) 回到你的blog文件夹下，执行：</p><pre><code>$ git config --global user.name &quot;yourname&quot;$ git config --global user.name &quot;youremail@xx.com&quot;</code></pre><p>3) 找到_config.yml，在最后找到下面的内容并修改：</p><pre><code>deploy:type: gitrepository: https://github.com/WYuyin/WYuyin.github.io.gitbranch: master</code></pre><p>4) 执行命令 <code>hexo d -g</code> 就可完成部署</p><p>等待一会会让你输入GitHub用户名和密码，再访问<a href="http://xxx.github.io就可以看到你的主页" target="_blank" rel="noopener">http://xxx.github.io就可以看到你的主页</a></p><blockquote><p>这里 搭建和部署是两个命令，第一次部署需要用hexo g，安装完插件后每次要提交只需hexo d即可，如果出错可以hexo clean + hexo d -g</p></blockquote><h3 id="使用NexT"><a href="#使用NexT" class="headerlink" title="使用NexT"></a>使用NexT</h3><p>1) 安装</p><pre><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></pre><p>2) 启用，修改_config.yml:</p><pre><code>theme: next</code></pre><p>3) 开启服务后再访问你的主页就可以看到NexT了</p><pre><code>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d -g$ hexo g &amp;&amp; hexo s   #如需本地预览，执行这一条</code></pre><p>提交了后并不是立马刷新的，稍微等十几秒钟才能更新</p><h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><p>这里根据个人喜好装饰博客，我之前其实已经做完了这些工作，一些配置就直接复制的之前的配置文件，这里区分两个配置文件，一个是安装hexo时生成的，还有一个是next主题中的，位置blog\themes\next_config.yml，修改样式主要在这两个中，另外如果想修改NexT的css样式，直接添加进\blog\themes\next\source\css_custom\custom.styl</p><p>大多数样式参考了<a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">大佬的博客!</a></p><p>下面就一些我遇到的坑记录解决方法</p><h4 id="字数与阅读时长"><a href="#字数与阅读时长" class="headerlink" title="字数与阅读时长"></a>字数与阅读时长</h4><p>链接：<a href="https://www.jianshu.com/p/baea8c95e39b" target="_blank" rel="noopener">Hexo添加字数统计、阅读时长</a></p><h4 id="代码块高亮颜色"><a href="#代码块高亮颜色" class="headerlink" title="代码块高亮颜色"></a>代码块高亮颜色</h4><p>在配置文件中找到：</p><p>highlight_theme: normal，注释显示有五种显示主题可用，分别是：</p><ul><li>normal</li><li>night</li><li>night eighties</li><li>night blue</li><li>night bright</li></ul><h4 id="创建分类与标签"><a href="#创建分类与标签" class="headerlink" title="创建分类与标签"></a>创建分类与标签</h4><p>链接：<a href="https://blog.csdn.net/ganzhilin520/article/details/79047249" target="_blank" rel="noopener">hexo设置 关于 标签 分类 归档</a></p><h4 id="博客icon更替"><a href="#博客icon更替" class="headerlink" title="博客icon更替"></a>博客icon更替</h4><p>1) 找一个尽量长宽比相等的小图标，什么图片格式都可以</p><p>2) 百度，在线将你的图片转成ico格式</p><p>3) 将图标放在 blog\themes\next\source\images 文件夹下</p><p><img src="/2018/10/10/搭建博客步骤/20181010112351.png"></p><p>4) 修改 blog\themes\next_config.yml</p><p><img src="/2018/10/10/搭建博客步骤/20181010112817.png"></p><h4 id="在博客中添加图片"><a href="#在博客中添加图片" class="headerlink" title="在博客中添加图片"></a>在博客中添加图片</h4><p>链接：<a href="https://blog.csdn.net/sugar_rainbow/article/details/57415705" target="_blank" rel="noopener">hexo生成博文插入图片</a></p><p>之前我用的是一种比较笨的方法，每次上传到github然后再添加打开，但是github加载的速度大家也知道，相当的慢，经常出不来，于是找到了这个hexo的插件：<code>npm install hexo-asset-image --save</code></p><p>当生成一个新的博客时会多出一个同名的文件夹，将图片放进去然后用<code>&lt;img src=&quot;xxxx/图片名.png&quot;&gt;</code>就可以实现了，当然，如果你想贴的是网上现成的图，直接写网址就ok</p><h4 id="评论与其他"><a href="#评论与其他" class="headerlink" title="评论与其他"></a>评论与其他</h4><p>上面收集的是一些我开博客遇到的问题，另外有一些样式上的问题比较简单，评论我用了<a href="https://livere.com/introduce" target="_blank" rel="noopener">来必力</a>，网上有很多其他的第三方评论平台都已经停了，所以只能暂时用这个，还算方便快捷。</p><p>这里就告一段落啦，如果有问题可以留言讨论，不过我也还是一个小菜鸡呢</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;写在前面，这其实不是我第一次搭博客，之前尝试过一次但是兴致冲冲地找了很多教程做到后来发现hexo装的就有些问题，并不是网上的教程不详细，但是东看西看容易出错，这里重头再来一遍，把之前的坑都补上&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;安
      
    
    </summary>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
